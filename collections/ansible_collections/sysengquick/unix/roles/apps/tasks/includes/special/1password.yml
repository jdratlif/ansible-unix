---
- name: Tags block
  tags: [apps_special_1password]
  block:
    - name: Check if 1Password is installed
      ansible.builtin.stat:
        path: "/opt/1Password/1password"
        get_attributes: false
        get_checksum: false
      register: apps_stat

    - name: When block
      vars:
        apps_tarball: "{{ apps_tmpdir.path }}/1p.tar.gz"
      when: not apps_stat.stat.exists or apps_upgrade | bool
      block:
        - name: Find existing 1Password folder
          ansible.builtin.find:
            paths: /opt
            patterns: "1password-*"
            file_type: directory
          register: apps_find

        - name: Remove existing 1Password install
          ansible.builtin.file:
            path: "{{ item.path }}"
            state: absent
          become: true
          loop: "{{ apps_find.files }}"
          when: apps_find.files | length > 0

        - name: Download 1Password
          ansible.builtin.get_url:
            url: "https://downloads.1password.com/linux/tar/stable/{{ ansible_facts.architecture }}/1password-latest.tar.gz"
            dest: "{{ apps_tarball }}"
            mode: "0644"
          vars:
            apps_version: "{{ apps_release_info.json.tag_name }}"

        - name: Extract 1Password tarball
          ansible.builtin.unarchive:
            src: "{{ apps_tarball }}"
            dest: /opt
            remote_src: true
          become: true

        - name: Find 1Password directory
          ansible.builtin.find:
            paths: /opt
            patterns: "1password-*"
            file_type: directory
          register: apps_find

        - name: Create symlink to 1Password directory
          ansible.builtin.file:
            src: "{{ apps_find.files[0].path }}"
            dest: /opt/1Password
            state: link
          become: true
          when: apps_find.files | length > 0

        - name: Run 1Password installer
          ansible.builtin.command: /opt/1Password/after-install.sh
          changed_when: true
          become: true
